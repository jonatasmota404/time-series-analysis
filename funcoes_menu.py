import modelos as model
import visualizacao as vlz
import pandas as pd
import os

# Mapear √≠ndices aos nomes dos modelos
modelos_disponiveis = {
    "1": "ARIMA",
    "2": "SARIMA",
    "3": "Prophet"
}

# Op√ß√µes de granularidade
granularidades_disponiveis = {
    "1": "diaria",
    "2": "semanal",
    "3": "mensal"
}

# Fun√ß√£o para selecionar a granularidade
def selecionar_granularidade():
    print("\nüìä Selecione a granularidade desejada:")
    for indice, gran in granularidades_disponiveis.items():
        print(f"{indice}. {gran.capitalize()}")
    escolha = input("Escolha a granularidade (1-3): ")
    return granularidades_disponiveis.get(escolha, "mensal")

# Fun√ß√£o para executar um modelo espec√≠fico com granularidade
def executar_modelo_especifico(indice_modelo):
    granularidade = selecionar_granularidade()  # Pergunta a granularidade ao usu√°rio
    
    if indice_modelo == "1":
        model.executar_arima(granularidade=granularidade)
    elif indice_modelo == "2":
        model.executar_sarima(granularidade=granularidade)
    elif indice_modelo == "3":
        model.executar_prophet(granularidade=granularidade)
    else:
        print("\n‚ùå √çndice inv√°lido. Escolha um modelo da lista.")

# Menu interativo
def menu_interativo(nome_pasta_metricas="metricas", nome_pasta_test_data="dados_processados"):
    while True:
        print("\n=== üìä MENU INTERATIVO üìä ===")
        print("1. Executar an√°lise de um modelo espec√≠fico")
        print("2. Executar An√°lise Explorat√≥ria (EDA)")
        print("3. Exibir todas as m√©tricas de um modelo espec√≠fico")
        print("4. Comparar desempenho entre os modelos")
        print("Z. Sair")

        escolha = input("Escolha uma op√ß√£o: ")

        if escolha == "1":
            print("\nüìå Modelos dispon√≠veis:")
            for indice, modelo in modelos_disponiveis.items():
                print(f"{indice}. {modelo}")
            indice_modelo = input("Digite o √≠ndice do modelo desejado: ")
            executar_modelo_especifico(indice_modelo)

        elif escolha == "2":
            print("\nüîé Executando An√°lise Explorat√≥ria (EDA)...")
            vlz.executar_eda()
            print("\n‚úÖ EDA conclu√≠da com sucesso.")

        elif escolha == "3":
            print("\nüìå Modelos dispon√≠veis:")
            for indice, modelo in modelos_disponiveis.items():
                print(f"{indice}. {modelo}")
            indice_modelo = input("Digite o √≠ndice do modelo desejado: ")
            nome_modelo = modelos_disponiveis.get(indice_modelo)

            if nome_modelo:
                print(f"\nüìä Exibindo todas as m√©tricas para '{nome_modelo}'...")
                vlz.exibir_todas_as_metricas(nome_modelo)
            else:
                print("‚ùå √çndice inv√°lido. Tente novamente.")

        elif escolha == "4":
            print("\nüîç Gerando an√°lise comparativa entre os modelos...")
            vlz.comparar_modelos()
            print("\n‚úÖ Compara√ß√£o conclu√≠da e gr√°ficos salvos.")

        elif escolha == "z" or escolha=="Z":
            print("üëã Saindo do programa.")
            break

        else:
            print("‚ùå Op√ß√£o inv√°lida. Tente novamente.")
